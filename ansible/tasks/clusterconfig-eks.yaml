- name: Add prometheus-community helm chart repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: "https://prometheus-community.github.io/helm-charts"

- name: Install Prometheus Operator (Kube Prometheus Stack)
  kubernetes.core.helm:
    name: prometheus-operator
    chart_ref: prometheus-community/kube-prometheus-stack
    release_namespace: monitoring
    create_namespace: true
    values: 
      grafana:
        enabled: false
  loop:
    - karpenter
    - cas
  environment:
    KUBECONFIG: "{{ lookup('vars', 'KUBECONFIG_EKS' + item | upper) }}"
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
    AWS_DEFAULT_REGION: "us-east-1"

- name: Add cluster autoscaler chart repo
  kubernetes.core.helm_repository:
    name: autoscaler
    repo_url: "https://kubernetes.github.io/autoscaler"

- name: Deploy Cluster Autoscaler (EKS)
  kubernetes.core.helm:
    name: cas
    chart_ref: autoscaler/cluster-autoscaler
    release_namespace: cas
    set_values:
      - value: "'autoDiscovery.clusterName'={{ clusters_eks['eks_cas'] }}"
        value_type: string
    environment:
      KUBECONFIG: "{{ lookup('vars', 'KUBECONFIG_EKS_CAS') }}"

- name: Create service account token for Prometheus
  kubernetes.core.k8s:
    api_version: v1
    kind: ServiceAccount
    namespace: monitoring
    name: prometheus-sa
  environment:
    KUBECONFIG: "{{ lookup('vars', 'KUBECONFIG_EKS' + item | upper) }}"   
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
    AWS_DEFAULT_REGION: "us-east-1"
  loop:
    - karpenter
    - cas

- name: Retrieve the token for Prometheus SA
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    namespace: monitoring
    label_selectors:
      - "kubernetes.io/service-account.name=prometheus-sa"
  register: prometheus_sa_token
  environment:
    KUBECONFIG: "{{ lookup('vars', 'KUBECONFIG_' + item | upper + '_EKS') }}"
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
    AWS_DEFAULT_REGION: "us-east-1"
  loop:
    - karpenter
    - cas

- name: Set Prometheus token fact
  set_fact:
    "EKS_PROM_TOKEN_{{ item | upper }}": "{{ item.data.token | b64decode }}"
  with_items: "{{ prometheus_sa_token.resources }}"

- name: Get Prometheus endpoint
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    namespace: monitoring
    name: prometheus-server
  register: prometheus_svc
  environment:
    KUBECONFIG: "{{ lookup('vars', 'KUBECONFIG_' + item | upper  + '_EKS') }}"
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
    AWS_DEFAULT_REGION: "us-east-1"
  loop:
    - karpenter
    - cas

- name: Set Prometheus endpoint fact
  set_fact:
    "EKS_PROM_ENDPOINT_{{ item | upper }}": "http://{{ item.spec.clusterIP }}:{{ item.spec.ports[0].port }}"
  loop: "{{ prometheus_svc.resources }}"
