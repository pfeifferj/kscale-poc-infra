- name: Download kube-burner archive
  become: yes
  ansible.builtin.get_url:
    url: "https://github.com/kube-burner/kube-burner/releases/download/v1.10.9/kube-burner-V1.10.9-linux-x86_64.tar.gz"
    dest: "/tmp/kube-burner-{{ kube_burner_version }}-{{ kube_burner_arch }}.tar.gz"
    mode: '0644'
    force: yes

- name: Unarchive kube-burner binary
  become: yes
  ansible.builtin.unarchive:
    src: "/tmp/kube-burner-{{ kube_burner_version }}-{{ kube_burner_arch }}.tar.gz"
    dest: /usr/local/bin/
    remote_src: yes
    mode: '0755'

- name: Prepare kube-burner configuration files
  ansible.builtin.copy:
    src: files/kube-burner-generic.yaml # change this to run different experiment
    dest: kube-burner-config.yaml

- name: Copy metrics profile file
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/files/metrics-profiles/metrics-aggregated.yaml"
    dest: "metrics-aggregated.yaml"

- name: Template metrics-endpoints.yaml for EKS clusters
  ansible.builtin.template:
    src: templates/metrics-endpoints.yaml.j2
    dest: "metrics-endpoints-eks-{{ item }}.yaml"
  vars:
    prom_endpoint: "{{ lookup('vars', 'PROM_ENDPOINT_EKS_' ~ (item | upper)) }}"
    prom_metrics_profile_path: "metrics-aggregated.yaml"
    prom_token: "{{ lookup('vars', 'PROM_TOKEN_EKS_' ~ (item | upper)) }}"
  loop: 
    - karpenter
    - cas

- name: deploy systemd service for port-forwarding
  become: yes
  ansible.builtin.template:
    src: templates/port-forward@.service.j2
    dest: /etc/systemd/system/port-forward-{{ item.cluster }}-eks.service
    mode: '0644'
  loop:
    - { cluster: 'karpenter', port: 9093 }
    - { cluster: 'cas', port: 9094 }
  vars:
    kubeconfig_path: "{{ lookup('vars', 'KUBECONFIG_EKS_' ~ (item.cluster | upper)) }}" 

- name: start port-forward service for each cluster
  become: yes
  ansible.builtin.systemd:
    name: "port-forward-{{ item }}-eks"
    state: started
    enabled: yes
  loop:
    - karpenter
    - cas

- name: Run kube-burner on all clusters
  become: yes
  ansible.builtin.shell: |
    /usr/local/bin/kube-burner init -c kube-burner-config.yaml -e metrics-endpoints-eks-{{ item }}.yaml --uuid {{ tag_uuid }} --timeout 1h
  register: benchmark_result
  environment:
    KUBECONFIG: "{{ lookup('vars', 'KUBECONFIG_EKS_' ~ (item | upper)) }}"
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
    AWS_DEFAULT_REGION: "us-east-1"
  loop: 
    - karpenter
    - cas

- name: stop and disable port-forward service for each cluster
  ansible.builtin.systemd:
    name: "port-forward-{{ item }}-eks"
    state: stopped
    enabled: no
  loop:
    - karpenter
    - cas
