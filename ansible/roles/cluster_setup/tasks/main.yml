---
# Install Prometheus for metrics collection
- name: Add prometheus-community helm chart repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: "https://prometheus-community.github.io/helm-charts"

- name: Install Prometheus Operator
  kubernetes.core.helm:
    name: prometheus-operator
    chart_ref: prometheus-community/kube-prometheus-stack
    release_namespace: monitoring
    create_namespace: true
    values: 
      grafana:
        enabled: false  
      prometheus:
        prometheusSpec:
          enableAdminAPI: true
  loop:
    - karpenter
    - cas
  environment:
    KUBECONFIG: "{{ lookup('vars', 'KUBECONFIG_' ~ cloud_provider | upper ~ '_' ~ (item | upper)) }}"
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
    AWS_DEFAULT_REGION: "us-east-1"

# Install autoscaler based on provider
- name: Configure autoscaler
  block:
    - name: Add autoscaler chart repo for EKS
      kubernetes.core.helm_repository:
        name: autoscaler_eks
        repo_url: "https://kubernetes.github.io/autoscaler"
      when: cloud_provider == 'eks'

    - name: Add autoscaler chart repo for IKS
      kubernetes.core.helm_repository:
        name: autoscaler_iks
        repo_url: "https://icr.io/helm/iks-charts"
      when: cloud_provider == 'iks'

    - name: Deploy Cluster Autoscaler for EKS
      kubernetes.core.helm:
        name: cas
        chart_ref: autoscaler_eks/cluster-autoscaler
        release_namespace: cas
        create_namespace: true
        set_values:
          - value: "autoDiscovery.clusterName=cas-eks"
            value_type: string
        values:
          workerpools:
            - default:
                enabled: true
                max: 3
                min: 1
      environment:
        KUBECONFIG: "{{ lookup('vars', 'KUBECONFIG_EKS_CAS') }}"
        AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
        AWS_DEFAULT_REGION: "us-east-1"
      when: cloud_provider == 'eks'

    - name: Deploy Cluster Autoscaler for IKS
      kubernetes.core.helm:
        name: cas
        chart_ref: iks-charts/ibm-iks-cluster-autoscaler
        release_namespace: cas
        create_namespace: true
        set_values:
          - value: "'autoDiscovery.clusterName'=cas-iks"
            value_type: string
        values:
          workerpools:
            - default:
                enabled: true
                max: 9
                min: 1
      environment:
        KUBECONFIG: "{{ lookup('vars', 'KUBECONFIG_IKS_CAS') }}"
      when: cloud_provider == 'iks'

# Create service account for metrics access
- name: Create service account for Prometheus
  kubernetes.core.k8s:
    api_version: v1
    kind: ServiceAccount
    namespace: monitoring
    name: prometheus-sa
  loop:
    - karpenter
    - cas
  environment:
    KUBECONFIG: "{{ lookup('vars', 'KUBECONFIG_' ~ cloud_provider | upper ~ '_' ~ (item | upper)) }}"
    AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID }}"
    AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY }}"
    AWS_DEFAULT_REGION: "us-east-1"
